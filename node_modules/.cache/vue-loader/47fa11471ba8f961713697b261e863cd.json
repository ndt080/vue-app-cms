{"remainingRequest":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\src\\components\\FormModProfile.vue?vue&type=style&index=0&id=361138db&scoped=true&lang=css&","dependencies":[{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\src\\components\\FormModProfile.vue","mtime":1598444678630},{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\=FILES=\\Projects\\WEB\\VueApp\\vue-app-cms\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idG57CiAgICBtYXJnaW46IDAgYXV0bzsKICAgIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["FormModProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA","file":"FormModProfile.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"card\" style=\"max-width: 60rem\">\r\n        <form class=\"card-body form-group\" @submit.prevent=\"submitHandler\" action='' method=\"POST\">\r\n            <table class=\"table table-hover\">\r\n                <tbody>\r\n                <tr class=\"form-group\">\r\n                    <td>Аватар</td>\r\n                    <td><input type=\"text\" class=\"form-control\"\r\n                               v-model.trim=\"dataAva\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"form-group\">\r\n                    <td>ФИО</td>\r\n                    <td><input type=\"text\" class=\"form-control\"\r\n                               v-model.trim=\"dataName\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"form-group\">\r\n                    <td>Дата рождения</td>\r\n                    <td><input type=\"date\" class=\"form-control\"\r\n                               v-model.trim=\"dataDateBirth\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"form-group\">\r\n                    <td>Курс</td>\r\n                    <td><input type=\"number\" class=\"form-control\"\r\n                               v-model.trim=\"dataCourse\"/>\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"form-group\">\r\n                    <td>Группа</td>\r\n                    <td><input type=\"number\" class=\"form-control\"\r\n                               v-model.trim=\"dataGroup\" />\r\n                    </td>\r\n                </tr>\r\n                <tr class=\"form-group\">\r\n                    <td colspan=\"2\"><button class=\"btn btn-success\">СОХРАНИТЬ</button></td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {email, minLength, required} from \"vuelidate/lib/validators\";\r\n\r\n    export default {\r\n        name: \"FormModProfile\",\r\n        data: () => ({\r\n            username: '',\r\n            dateBirth: '',\r\n            course: '',\r\n            group: '',\r\n            ava: ''\r\n        }),\r\n        validations: {\r\n            dataName: {},\r\n            dataDateBirth: {},\r\n            dataCourse: {},\r\n            dataGroup: {},\r\n            dataAva: {},\r\n        },\r\n        computed: {\r\n            dataName: {\r\n                get(){\r\n                    return this.$store.getters.info.username\r\n                },\r\n                set(value){\r\n                    this.$store.getters.info.username = value\r\n                    this.username = value\r\n                }\r\n            },\r\n            dataDateBirth: {\r\n                get(){\r\n                    return this.$store.getters.info.dateBirth\r\n                },\r\n                set(value) {\r\n                    this.$store.getters.info.dateBirth = value\r\n                    this.dateBirth = value\r\n                }\r\n            },\r\n            dataCourse: {\r\n                get(){\r\n                    return this.$store.getters.info.course\r\n                },\r\n                set(value) {\r\n                    this.$store.getters.info.course = value\r\n                    this.course = value\r\n                }\r\n            },\r\n            dataGroup: {\r\n                get(){\r\n                    return this.$store.getters.info.group\r\n                },\r\n                set(value) {\r\n                    this.$store.getters.info.group = value\r\n                    this.group = value\r\n                }\r\n            },\r\n            dataAva: {\r\n                get(){\r\n                    return this.$store.getters.info.ava\r\n                },\r\n                set(value) {\r\n                    this.$store.getters.info.ava = value\r\n                    this.ava = value\r\n                }\r\n            },\r\n        },\r\n        methods:{\r\n            async submitHandler (){\r\n                if(this.$v.$invalid){\r\n                    this.$v.$touch()\r\n                    return\r\n                }\r\n\r\n                const formData ={\r\n                    username: this.username,\r\n                    dateBirth: this.dateBirth,\r\n                    course: this.course,\r\n                    group: this.group,\r\n                    ava: this.ava,\r\n                }\r\n                try{\r\n                    await this.$store.dispatch('modProfile', formData)\r\n                    this.$toast.success('Изменения применены');\r\n                }catch (e) {\r\n                    this.$toast.error('Ошибка применения изменений!');\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .btn{\r\n        margin: 0 auto;\r\n        width: 100%;\r\n    }\r\n</style>\r\n"]}]}